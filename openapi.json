{
  "openapi": "3.0.2",
  "info": {
    "title": "HowToDo API",
    "description": "On development stage.",
    "version": "v0.1"
  },
  "paths": {
    "/request": {
      "get": {
        "tags": ["request"],
        "summary": "Получить запрос по id",
        "operationId": "getRequestById",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Request Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "request_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestDto"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено запроса с таким ID"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["request"],
        "summary": "Добавить запрос в БД",
        "operationId": "createRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/request/latest": {
      "get": {
        "tags": ["request"],
        "summary": "Получить последние 9 заявок",
        "operationId": "getLatestRequest",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Latest Request Request Latest Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRequestDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/category": {
      "get": {
        "tags": ["category"],
        "summary": "Получить все категории",
        "operationId": "getAllCategory",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Category Category Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["category"],
        "summary": "Добавить категорию",
        "operationId": "createCategory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Category Name",
              "type": "string"
            },
            "name": "category_name",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryDto"
                }
              }
            }
          },
          "409": {
            "description": "Категория с таким названием уже существует"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["category"],
        "summary": "Удаление категории по ID",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Category Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "category_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Категория с таким iD не найдена"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/category/categoryRequests": {
      "get": {
        "tags": ["category"],
        "summary": "Получить все запросы по названию категории",
        "operationId": "getRequestByName",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Category Name",
              "type": "string"
            },
            "name": "category_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Request By Category Category Categoryrequests Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRequestDto"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Получить пользователей по ролям (пусто - то получить всех)",
        "operationId": "getUsersByRoles",
        "parameters": [
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Roles"
            },
            "name": "role",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Users By Roles User Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUserDto"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Добавить пользователя",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "409": {
            "description": "Пользователь с таким логином уже существует"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Удаление пользователя по ID",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Пользователь не может быть удален, так как отсутсвует в базе данных."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["user"],
        "summary": "Получить пользователя по ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не может быть найден, так как отсутсвует в базе данных."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/auth": {
      "post": {
        "tags": ["user"],
        "summary": "Авторизация пользователя",
        "operationId": "userAuth",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Login",
              "type": "string"
            },
            "name": "login",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Password",
              "type": "string"
            },
            "name": "password",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateRequestDto": {
        "title": "CreateRequestDto",
        "required": [
          "customerType",
          "customerName",
          "phone",
          "email",
          "requestTitle",
          "requestDetails",
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "customerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerType"
              }
            ],
            "description": "Тип заказчика",
            "example": "entity"
          },
          "customerName": {
            "title": "Customername",
            "type": "string",
            "description": "Название организации или ФИО заказчика",
            "example": "ООО HowtoWork"
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "description": "Номер заказчика",
            "example": "89135307588"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "Почта заказчика",
            "example": "client@mail.com"
          },
          "requestTitle": {
            "title": "Requesttitle",
            "type": "string",
            "description": "Заголовок заявки",
            "example": "Нужен сайт"
          },
          "requestDetails": {
            "title": "Requestdetails",
            "type": "string",
            "description": "Подробности заявки",
            "example": "Нужен крутой сайт и тд..."
          },
          "fileName": {
            "title": "Filename",
            "type": "string",
            "description": "Название файла",
            "example": "ТЗ документ"
          },
          "fileLink": {
            "title": "Filelink",
            "type": "string",
            "description": "Ссылка на файл",
            "example": "drive.google.com/files/file/doc"
          },
          "categoryId": {
            "title": "Categoryid",
            "type": "string",
            "description": "Идентификатор категории",
            "format": "uuid",
            "example": 1
          }
        }
      },
      "CreateUserDto": {
        "title": "CreateUserDto",
        "required": ["login", "role", "password"],
        "type": "object",
        "properties": {
          "login": {
            "title": "Login",
            "maxLength": 35,
            "minLength": 5,
            "type": "string",
            "description": "Логин пользователя",
            "example": "Sanya1337"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Роль пользователя",
            "example": "user"
          },
          "password": {
            "title": "Password",
            "maxLength": 35,
            "minLength": 8,
            "type": "string",
            "description": "Пароль пользователя",
            "example": "qwerty123"
          }
        }
      },
      "CustomerType": {
        "title": "CustomerType",
        "enum": ["individual", "entity"],
        "description": "An enumeration."
      },
      "GetCategoryDto": {
        "title": "GetCategoryDto",
        "required": ["name", "id"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Название категории",
            "example": "Программирование"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Идентификатор категории",
            "format": "uuid",
            "example": 1
          }
        }
      },
      "GetRequestDto": {
        "title": "GetRequestDto",
        "required": [
          "customerType",
          "customerName",
          "phone",
          "email",
          "requestTitle",
          "requestDetails",
          "categoryId",
          "id",
          "date"
        ],
        "type": "object",
        "properties": {
          "customerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerType"
              }
            ],
            "description": "Тип заказчика",
            "example": "entity"
          },
          "customerName": {
            "title": "Customername",
            "type": "string",
            "description": "Название организации или ФИО заказчика",
            "example": "ООО HowtoWork"
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "description": "Номер заказчика",
            "example": "89135307588"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "Почта заказчика",
            "example": "client@mail.com"
          },
          "requestTitle": {
            "title": "Requesttitle",
            "type": "string",
            "description": "Заголовок заявки",
            "example": "Нужен сайт"
          },
          "requestDetails": {
            "title": "Requestdetails",
            "type": "string",
            "description": "Подробности заявки",
            "example": "Нужен крутой сайт и тд..."
          },
          "fileName": {
            "title": "Filename",
            "type": "string",
            "description": "Название файла",
            "example": "ТЗ документ"
          },
          "fileLink": {
            "title": "Filelink",
            "type": "string",
            "description": "Ссылка на файл",
            "example": "drive.google.com/files/file/doc"
          },
          "categoryId": {
            "title": "Categoryid",
            "type": "string",
            "description": "Идентификатор категории",
            "format": "uuid",
            "example": 1
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Идентификатор заявки",
            "format": "uuid",
            "example": 1
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Дата добавления запроса",
            "format": "date-time",
            "example": "13.12.2001 00:00:00"
          }
        }
      },
      "GetUserDto": {
        "title": "GetUserDto",
        "required": ["login", "role", "id"],
        "type": "object",
        "properties": {
          "login": {
            "title": "Login",
            "maxLength": 35,
            "minLength": 5,
            "type": "string",
            "description": "Логин пользователя",
            "example": "Sanya1337"
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Роль пользователя",
            "example": "user"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Идентификатор пользователя",
            "format": "uuid",
            "example": "1"
          }
        }
      },
      "GetUserToken": {
        "title": "GetUserToken",
        "required": ["sessionId", "refreshToken", "accessToken"],
        "type": "object",
        "properties": {
          "sessionId": {
            "title": "Sessionid",
            "type": "string",
            "description": "Идентификатор сессии",
            "format": "uuid"
          },
          "refreshToken": {
            "title": "Refreshtoken",
            "type": "string",
            "description": "Токен для получения нового",
            "format": "uuid"
          },
          "accessToken": {
            "title": "Accesstoken",
            "type": "string",
            "description": "Токен доступа"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Roles": {
        "title": "Roles",
        "enum": ["admin", "user"],
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
